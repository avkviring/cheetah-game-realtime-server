syntax = "proto3";
package cheetah.matches.realtime.internal;

import public "matches.realtime.shared.proto";

service Realtime {
  /**
    Создать комнату
   */
  rpc CreateRoom(RoomTemplate) returns(CreateRoomResponse);

  /**
    Присоединить пользователя к комнате, после этого комната будет ожидать udp соединения
   */
  rpc CreateMember(CreateMemberRequest) returns(CreateMemberResponse);

  /**
    Создать супер пользователя, для него отключены проверки всех прав
   */
  rpc CreateSuperMember(CreateSuperMemberRequest) returns(CreateMemberResponse);

  /**
    Проверить живой ли сервер
   */
  rpc Probe(ProbeRequest) returns (ProbeResponse);
}

message CreateRoomResponse {
  uint64 id = 1;
}

message CreateMemberRequest {
  uint64 room_id = 1;
  UserTemplate user = 2;
}

message CreateSuperMemberRequest {
  uint64 room_id = 1;
}

message  CreateMemberResponse {
  uint32 user_id = 1;
  bytes private_key = 2;
}


/**
  Шаблон для описания комнаты
 */
message RoomTemplate {
  string template_name = 1;
  /**
    Начальные игровые объекты комнаты
   */
  repeated GameObjectTemplate objects = 2;
  /**
    Права доступа для комнаты
   */
  Permissions permissions = 3;
}


/**
  Описание прав доступа для комнаты
 */
message Permissions {
  /**
    Права доступа для объектов комнаты
   */
  repeated GameObjectTemplatePermission objects = 1;
}

/**
  Права доступа для объектов
 */
message GameObjectTemplatePermission {
  /**
    Шаблон игрового объекта, к которому применимы данные права
   */
  uint32 template = 1;
  /**
    Права доступа к полям для групп
   */
  repeated GroupsPermissionRule rules = 2;

  /**
    Права доступа к конкретным полям
   */
  repeated PermissionField fields = 3;
}


/**
  Права доступа для группы
 */
message GroupsPermissionRule {
  uint64 groups = 1;
  PermissionLevel permission = 2;
}


/**
  Права доступа для поля
 */
message PermissionField {
  uint32 id = 1;
  cheetah.matches.realtime.shared.FieldType type = 2;
  repeated GroupsPermissionRule rules = 3;
}


enum PermissionLevel {
  Deny = 0;
  Ro = 1;
  Rw = 2;
}

message UserTemplate {
  uint64 groups = 3;
  repeated GameObjectTemplate objects = 4;
}

message GameObjectTemplate {
  uint32 id = 1;
  uint32 template = 2;
  uint64 groups = 3;
  repeated cheetah.matches.realtime.shared.GameObjectField fields = 4;
}

message ProbeRequest {

}
message ProbeResponse {

}