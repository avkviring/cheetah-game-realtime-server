apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  annotations:
    configmap.reloader.stakater.com/reload: "cheetah-matches-factory-rooms"
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  replicas: 1
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        prometheus: "true"
        app: {{ .Chart.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "ghcr.io/cheetah-game-platform/platform/matches-factory:{{ .Chart.Version }}"
          imagePullPolicy: Always
          startupProbe:
            exec:
              command: [ "/bin/grpc_health_probe", "-addr=:5001", "-addr=:5002" ]
            initialDelaySeconds: 5
          livenessProbe:
            exec:
              command: [ "/bin/grpc_health_probe", "-addr=:5001","-addr=:5002" ]
            initialDelaySeconds: 10
          resources:
            limits:
              cpu: {{ .Values.cpu.limit }}
              memory: {{ .Values.memory.limit }}
            requests:
              cpu: {{ .Values.cpu.request }}
              memory: {{ .Values.memory.request }}
          env:
            - name: TEMPLATES_PATH
              value: /tmp/config/
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LOKI_URL
              value: {{.Values.lokiUrl}}
          volumeMounts:
            - mountPath: /var/lib/room-templates/
              readOnly: true
              name: room-templates
          command:
            - 'sh'
            - '-c'
            - 'mkdir -p /tmp/config && tar -xzf /var/lib/room-templates/rooms.tgz -C /tmp/config && /cheetah-matches-factory-server'
          ports:
            - name: prometheus
              containerPort: 3000
              protocol: TCP
      volumes:
        - name: room-templates
          configMap:
            name: "cheetah-matches-factory-rooms"