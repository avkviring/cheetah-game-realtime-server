{{ if .Values.internalPostgresql.enable}}
{{ $secret := (lookup "v1" "Secret" .Release.Namespace (printf "%s-postgresql" .Chart.Name)) }}
apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Chart.Name }}-postgresql"
type: Opaque
  {{ if $secret}}
immutable: true
data:
  user: {{ $secret.data.user }}
  password: {{ $secret.data.password }}
  {{ else }}
stringData:
  user: authentication
  password: {{ uuidv4 | quote }}
  {{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Chart.Name }}-postgresql"
spec:
  selector:
    app: "{{ .Chart.Name }}-postgresql"
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Chart.Name }}-postgresql"
spec:
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}-postgresql"
  replicas: 1
  serviceName: "{{ .Chart.Name }}-postgresql"
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}-postgresql"
    spec:
      containers:
        - name: "{{ .Chart.Name }}-postgresql"
          image: postgres:13.1-alpine
          resources:
            limits:
              cpu: "1"
              memory: 150Mi
            requests:
              cpu: "0.1"
              memory: 150Mi
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ .Chart.Name }}-postgresql"
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Chart.Name }}-postgresql"
                  key: password
            - name: PGDATA
              value: /var/lib/postgresql/data/db/
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: "{{ .Chart.Name }}-postgresql"
      {{if not .Values.internalPostgresql.persistence.enabled}}
      volumes:
        - name: "{{ .Chart.Name }}-postgresql"
          emptyDir:
            sizeLimit: 100Mi
            medium: Memory
  {{end}}
  {{if .Values.internalPostgresql.persistence.enabled}}
  volumeClaimTemplates:
    - metadata:
        name: "{{ .Chart.Name }}-postgresql"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
  {{end}}
  {{end}}
