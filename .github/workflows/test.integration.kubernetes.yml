#
# Интеграционный тест
#
name: test.integration.kubernetes
concurrency: e2e-kubernetes
on:
  pull_request:
    types:
      - synchronize
      - opened
jobs:
  build-docker-images:
    uses: ./.github/workflows/templates.build.docker-images.yml
    with:
      version: 999.999.999
  build-realtime-client-library-linux:
    uses: ./.github/workflows/templates.build.realtime-client-library-linux.yml
  deploy-servers:
    runs-on: ubuntu-latest
    needs:
      - build-docker-images
    container:
      image: ghcr.io/cheetah-game-platform/kubernetes-control-image:1.2.1
    steps:
      - uses: actions/checkout@v2
      - run: |
          cd e2e/Unity/Server/Helmwave/
          echo '${{ secrets.KUBERNETES_STAGE_CLUSTER }}' >> /tmp/kubeconfig.xml
          export KUBECONFIG=/tmp/kubeconfig.xml
          helmwave down --build
          ./install.sh
  e2e-integration-unity-kubernetes-test:
    runs-on: ubuntu-latest
    needs:
      - deploy-servers
      - build-realtime-client-library-linux
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2.1.7
        with:
          path: |
            e2e/Unity/Library
          key: integration-docker-test-${{ github.sha }}
          restore-keys: |
            integration-docker-test-
      - uses: actions/download-artifact@v2
        with:
          name: realtime-client-library-linux
          path: modules/matches/Realtime/client/Unity/games.cheetah.matches.realtime/Runtime/Library/
      - name: Generate GRPC Implementations
        run: scripts/generators/grpc/unity.sh
      - name: Configure integration-test-config.json
        run: echo "{\"ServerHost\":\"stage1.stage-a.cheetah.games\"}" >  e2e/Unity/integration-test-config.json
      - uses: cheetah-game-platform/unity-test-runner@main
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: e2e/Unity/
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          testMode: All
          useHostNetwork: true

