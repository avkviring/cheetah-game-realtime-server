// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: matches.realtime.internal.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Cheetah.Matches.Realtime.GRPC.Internal {
  public static partial class Realtime
  {
    static readonly string __ServiceName = "cheetah.matches.realtime.internal.Realtime";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.RoomTemplate> __Marshaller_cheetah_matches_realtime_internal_RoomTemplate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.RoomTemplate.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.RoomIdResponse> __Marshaller_cheetah_matches_realtime_internal_RoomIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.RoomIdResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberRequest> __Marshaller_cheetah_matches_realtime_internal_CreateMemberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse> __Marshaller_cheetah_matches_realtime_internal_CreateMemberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberRequest> __Marshaller_cheetah_matches_realtime_internal_DeleteMemberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberResponse> __Marshaller_cheetah_matches_realtime_internal_DeleteMemberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.CreateSuperMemberRequest> __Marshaller_cheetah_matches_realtime_internal_CreateSuperMemberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.CreateSuperMemberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeRequest> __Marshaller_cheetah_matches_realtime_internal_ProbeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeResponse> __Marshaller_cheetah_matches_realtime_internal_ProbeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.EmptyRequest> __Marshaller_cheetah_matches_realtime_internal_EmptyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.EmptyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.RoomLifecycleResponse> __Marshaller_cheetah_matches_realtime_internal_RoomLifecycleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.RoomLifecycleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomRequest> __Marshaller_cheetah_matches_realtime_internal_DeleteRoomRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomResponse> __Marshaller_cheetah_matches_realtime_internal_DeleteRoomResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigRequest> __Marshaller_cheetah_matches_realtime_internal_PutForwardedCommandConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigResponse> __Marshaller_cheetah_matches_realtime_internal_PutForwardedCommandConfigResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyRequest> __Marshaller_cheetah_matches_realtime_internal_MarkRoomAsReadyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyResponse> __Marshaller_cheetah_matches_realtime_internal_MarkRoomAsReadyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoRequest> __Marshaller_cheetah_matches_realtime_internal_GetRoomInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoResponse> __Marshaller_cheetah_matches_realtime_internal_GetRoomInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsRequest> __Marshaller_cheetah_matches_realtime_internal_UpdateRoomPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsResponse> __Marshaller_cheetah_matches_realtime_internal_UpdateRoomPermissionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.RoomTemplate, global::Cheetah.Matches.Realtime.GRPC.Internal.RoomIdResponse> __Method_CreateRoom = new grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.RoomTemplate, global::Cheetah.Matches.Realtime.GRPC.Internal.RoomIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateRoom",
        __Marshaller_cheetah_matches_realtime_internal_RoomTemplate,
        __Marshaller_cheetah_matches_realtime_internal_RoomIdResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse> __Method_CreateMember = new grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateMember",
        __Marshaller_cheetah_matches_realtime_internal_CreateMemberRequest,
        __Marshaller_cheetah_matches_realtime_internal_CreateMemberResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberResponse> __Method_DeleteMember = new grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteMember",
        __Marshaller_cheetah_matches_realtime_internal_DeleteMemberRequest,
        __Marshaller_cheetah_matches_realtime_internal_DeleteMemberResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.CreateSuperMemberRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse> __Method_CreateSuperMember = new grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.CreateSuperMemberRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSuperMember",
        __Marshaller_cheetah_matches_realtime_internal_CreateSuperMemberRequest,
        __Marshaller_cheetah_matches_realtime_internal_CreateMemberResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeResponse> __Method_Probe = new grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Probe",
        __Marshaller_cheetah_matches_realtime_internal_ProbeRequest,
        __Marshaller_cheetah_matches_realtime_internal_ProbeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.EmptyRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.RoomLifecycleResponse> __Method_WatchRoomLifecycleEvent = new grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.EmptyRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.RoomLifecycleResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "WatchRoomLifecycleEvent",
        __Marshaller_cheetah_matches_realtime_internal_EmptyRequest,
        __Marshaller_cheetah_matches_realtime_internal_RoomLifecycleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomResponse> __Method_DeleteRoom = new grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRoom",
        __Marshaller_cheetah_matches_realtime_internal_DeleteRoomRequest,
        __Marshaller_cheetah_matches_realtime_internal_DeleteRoomResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigResponse> __Method_PutForwardedCommandConfig = new grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PutForwardedCommandConfig",
        __Marshaller_cheetah_matches_realtime_internal_PutForwardedCommandConfigRequest,
        __Marshaller_cheetah_matches_realtime_internal_PutForwardedCommandConfigResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyResponse> __Method_MarkRoomAsReady = new grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MarkRoomAsReady",
        __Marshaller_cheetah_matches_realtime_internal_MarkRoomAsReadyRequest,
        __Marshaller_cheetah_matches_realtime_internal_MarkRoomAsReadyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoResponse> __Method_GetRoomInfo = new grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRoomInfo",
        __Marshaller_cheetah_matches_realtime_internal_GetRoomInfoRequest,
        __Marshaller_cheetah_matches_realtime_internal_GetRoomInfoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsResponse> __Method_UpdateRoomPermissions = new grpc::Method<global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRoomPermissions",
        __Marshaller_cheetah_matches_realtime_internal_UpdateRoomPermissionsRequest,
        __Marshaller_cheetah_matches_realtime_internal_UpdateRoomPermissionsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cheetah.Matches.Realtime.GRPC.Internal.MatchesRealtimeInternalReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Realtime</summary>
    [grpc::BindServiceMethod(typeof(Realtime), "BindService")]
    public abstract partial class RealtimeBase
    {
      /// <summary>
      ///*
      ///Создать комнату
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cheetah.Matches.Realtime.GRPC.Internal.RoomIdResponse> CreateRoom(global::Cheetah.Matches.Realtime.GRPC.Internal.RoomTemplate request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      ///Присоединить пользователя к комнате, после этого комната будет ожидать udp соединения
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse> CreateMember(global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      ///Удалить пользователя из комнаты и закрыть соединение
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberResponse> DeleteMember(global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      ///Создать супер пользователя, для него отключены проверки всех прав
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse> CreateSuperMember(global::Cheetah.Matches.Realtime.GRPC.Internal.CreateSuperMemberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      ///Проверить живой ли сервер
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeResponse> Probe(global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      ///Отслеживание операций создания комнаты, при первом вызове отсылаются и уже созданные комнаты.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task WatchRoomLifecycleEvent(global::Cheetah.Matches.Realtime.GRPC.Internal.EmptyRequest request, grpc::IServerStreamWriter<global::Cheetah.Matches.Realtime.GRPC.Internal.RoomLifecycleResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      ///Отключить всех пользователей от комнаты и удалить её
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomResponse> DeleteRoom(global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      ///Настроить форвардинг команд суперпользователям совпадающих с фильтром вместо execute для комнаты
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigResponse> PutForwardedCommandConfig(global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      ///Метод вызывается плагином, когда он закончил настройку новой комнаты и разрешает выполнять команды от пользователей.
      ///Чтобы статус комнаты переключился в ready, все плагины переданные в env PLUGIN_NAMES должны вызвать этот метод.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyResponse> MarkRoomAsReady(global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      ///Получить информацию о комнате
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoResponse> GetRoomInfo(global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsResponse> UpdateRoomPermissions(global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Realtime</summary>
    public partial class RealtimeClient : grpc::ClientBase<RealtimeClient>
    {
      /// <summary>Creates a new client for Realtime</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public RealtimeClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Realtime that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public RealtimeClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected RealtimeClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected RealtimeClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///*
      ///Создать комнату
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.RoomIdResponse CreateRoom(global::Cheetah.Matches.Realtime.GRPC.Internal.RoomTemplate request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRoom(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Создать комнату
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.RoomIdResponse CreateRoom(global::Cheetah.Matches.Realtime.GRPC.Internal.RoomTemplate request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateRoom, null, options, request);
      }
      /// <summary>
      ///*
      ///Создать комнату
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.RoomIdResponse> CreateRoomAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.RoomTemplate request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRoomAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Создать комнату
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.RoomIdResponse> CreateRoomAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.RoomTemplate request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateRoom, null, options, request);
      }
      /// <summary>
      ///*
      ///Присоединить пользователя к комнате, после этого комната будет ожидать udp соединения
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse CreateMember(global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Присоединить пользователя к комнате, после этого комната будет ожидать udp соединения
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse CreateMember(global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateMember, null, options, request);
      }
      /// <summary>
      ///*
      ///Присоединить пользователя к комнате, после этого комната будет ожидать udp соединения
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse> CreateMemberAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Присоединить пользователя к комнате, после этого комната будет ожидать udp соединения
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse> CreateMemberAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateMember, null, options, request);
      }
      /// <summary>
      ///*
      ///Удалить пользователя из комнаты и закрыть соединение
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberResponse DeleteMember(global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Удалить пользователя из комнаты и закрыть соединение
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberResponse DeleteMember(global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteMember, null, options, request);
      }
      /// <summary>
      ///*
      ///Удалить пользователя из комнаты и закрыть соединение
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberResponse> DeleteMemberAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Удалить пользователя из комнаты и закрыть соединение
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberResponse> DeleteMemberAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteMember, null, options, request);
      }
      /// <summary>
      ///*
      ///Создать супер пользователя, для него отключены проверки всех прав
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse CreateSuperMember(global::Cheetah.Matches.Realtime.GRPC.Internal.CreateSuperMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSuperMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Создать супер пользователя, для него отключены проверки всех прав
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse CreateSuperMember(global::Cheetah.Matches.Realtime.GRPC.Internal.CreateSuperMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSuperMember, null, options, request);
      }
      /// <summary>
      ///*
      ///Создать супер пользователя, для него отключены проверки всех прав
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse> CreateSuperMemberAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.CreateSuperMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSuperMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Создать супер пользователя, для него отключены проверки всех прав
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse> CreateSuperMemberAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.CreateSuperMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSuperMember, null, options, request);
      }
      /// <summary>
      ///*
      ///Проверить живой ли сервер
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeResponse Probe(global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Probe(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Проверить живой ли сервер
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeResponse Probe(global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Probe, null, options, request);
      }
      /// <summary>
      ///*
      ///Проверить живой ли сервер
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeResponse> ProbeAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProbeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Проверить живой ли сервер
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeResponse> ProbeAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Probe, null, options, request);
      }
      /// <summary>
      ///*
      ///Отслеживание операций создания комнаты, при первом вызове отсылаются и уже созданные комнаты.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Cheetah.Matches.Realtime.GRPC.Internal.RoomLifecycleResponse> WatchRoomLifecycleEvent(global::Cheetah.Matches.Realtime.GRPC.Internal.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return WatchRoomLifecycleEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Отслеживание операций создания комнаты, при первом вызове отсылаются и уже созданные комнаты.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Cheetah.Matches.Realtime.GRPC.Internal.RoomLifecycleResponse> WatchRoomLifecycleEvent(global::Cheetah.Matches.Realtime.GRPC.Internal.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_WatchRoomLifecycleEvent, null, options, request);
      }
      /// <summary>
      ///*
      ///Отключить всех пользователей от комнаты и удалить её
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomResponse DeleteRoom(global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRoom(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Отключить всех пользователей от комнаты и удалить её
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomResponse DeleteRoom(global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRoom, null, options, request);
      }
      /// <summary>
      ///*
      ///Отключить всех пользователей от комнаты и удалить её
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomResponse> DeleteRoomAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRoomAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Отключить всех пользователей от комнаты и удалить её
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomResponse> DeleteRoomAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRoom, null, options, request);
      }
      /// <summary>
      ///*
      ///Настроить форвардинг команд суперпользователям совпадающих с фильтром вместо execute для комнаты
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigResponse PutForwardedCommandConfig(global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PutForwardedCommandConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Настроить форвардинг команд суперпользователям совпадающих с фильтром вместо execute для комнаты
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigResponse PutForwardedCommandConfig(global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PutForwardedCommandConfig, null, options, request);
      }
      /// <summary>
      ///*
      ///Настроить форвардинг команд суперпользователям совпадающих с фильтром вместо execute для комнаты
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigResponse> PutForwardedCommandConfigAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PutForwardedCommandConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Настроить форвардинг команд суперпользователям совпадающих с фильтром вместо execute для комнаты
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigResponse> PutForwardedCommandConfigAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PutForwardedCommandConfig, null, options, request);
      }
      /// <summary>
      ///*
      ///Метод вызывается плагином, когда он закончил настройку новой комнаты и разрешает выполнять команды от пользователей.
      ///Чтобы статус комнаты переключился в ready, все плагины переданные в env PLUGIN_NAMES должны вызвать этот метод.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyResponse MarkRoomAsReady(global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MarkRoomAsReady(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Метод вызывается плагином, когда он закончил настройку новой комнаты и разрешает выполнять команды от пользователей.
      ///Чтобы статус комнаты переключился в ready, все плагины переданные в env PLUGIN_NAMES должны вызвать этот метод.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyResponse MarkRoomAsReady(global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MarkRoomAsReady, null, options, request);
      }
      /// <summary>
      ///*
      ///Метод вызывается плагином, когда он закончил настройку новой комнаты и разрешает выполнять команды от пользователей.
      ///Чтобы статус комнаты переключился в ready, все плагины переданные в env PLUGIN_NAMES должны вызвать этот метод.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyResponse> MarkRoomAsReadyAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MarkRoomAsReadyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Метод вызывается плагином, когда он закончил настройку новой комнаты и разрешает выполнять команды от пользователей.
      ///Чтобы статус комнаты переключился в ready, все плагины переданные в env PLUGIN_NAMES должны вызвать этот метод.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyResponse> MarkRoomAsReadyAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MarkRoomAsReady, null, options, request);
      }
      /// <summary>
      ///*
      ///Получить информацию о комнате
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoResponse GetRoomInfo(global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRoomInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Получить информацию о комнате
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoResponse GetRoomInfo(global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRoomInfo, null, options, request);
      }
      /// <summary>
      ///*
      ///Получить информацию о комнате
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoResponse> GetRoomInfoAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRoomInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      ///Получить информацию о комнате
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoResponse> GetRoomInfoAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRoomInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsResponse UpdateRoomPermissions(global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRoomPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsResponse UpdateRoomPermissions(global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRoomPermissions, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsResponse> UpdateRoomPermissionsAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRoomPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsResponse> UpdateRoomPermissionsAsync(global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRoomPermissions, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override RealtimeClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new RealtimeClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(RealtimeBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateRoom, serviceImpl.CreateRoom)
          .AddMethod(__Method_CreateMember, serviceImpl.CreateMember)
          .AddMethod(__Method_DeleteMember, serviceImpl.DeleteMember)
          .AddMethod(__Method_CreateSuperMember, serviceImpl.CreateSuperMember)
          .AddMethod(__Method_Probe, serviceImpl.Probe)
          .AddMethod(__Method_WatchRoomLifecycleEvent, serviceImpl.WatchRoomLifecycleEvent)
          .AddMethod(__Method_DeleteRoom, serviceImpl.DeleteRoom)
          .AddMethod(__Method_PutForwardedCommandConfig, serviceImpl.PutForwardedCommandConfig)
          .AddMethod(__Method_MarkRoomAsReady, serviceImpl.MarkRoomAsReady)
          .AddMethod(__Method_GetRoomInfo, serviceImpl.GetRoomInfo)
          .AddMethod(__Method_UpdateRoomPermissions, serviceImpl.UpdateRoomPermissions).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, RealtimeBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateRoom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.Matches.Realtime.GRPC.Internal.RoomTemplate, global::Cheetah.Matches.Realtime.GRPC.Internal.RoomIdResponse>(serviceImpl.CreateRoom));
      serviceBinder.AddMethod(__Method_CreateMember, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse>(serviceImpl.CreateMember));
      serviceBinder.AddMethod(__Method_DeleteMember, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteMemberResponse>(serviceImpl.DeleteMember));
      serviceBinder.AddMethod(__Method_CreateSuperMember, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.Matches.Realtime.GRPC.Internal.CreateSuperMemberRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.CreateMemberResponse>(serviceImpl.CreateSuperMember));
      serviceBinder.AddMethod(__Method_Probe, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.ProbeResponse>(serviceImpl.Probe));
      serviceBinder.AddMethod(__Method_WatchRoomLifecycleEvent, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Cheetah.Matches.Realtime.GRPC.Internal.EmptyRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.RoomLifecycleResponse>(serviceImpl.WatchRoomLifecycleEvent));
      serviceBinder.AddMethod(__Method_DeleteRoom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.DeleteRoomResponse>(serviceImpl.DeleteRoom));
      serviceBinder.AddMethod(__Method_PutForwardedCommandConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.PutForwardedCommandConfigResponse>(serviceImpl.PutForwardedCommandConfig));
      serviceBinder.AddMethod(__Method_MarkRoomAsReady, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.MarkRoomAsReadyResponse>(serviceImpl.MarkRoomAsReady));
      serviceBinder.AddMethod(__Method_GetRoomInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.GetRoomInfoResponse>(serviceImpl.GetRoomInfo));
      serviceBinder.AddMethod(__Method_UpdateRoomPermissions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsRequest, global::Cheetah.Matches.Realtime.GRPC.Internal.UpdateRoomPermissionsResponse>(serviceImpl.UpdateRoomPermissions));
    }

  }
}
#endregion
