syntax = "proto3";
package cheetah.matches.registry.internal;

service Registry {
  // Получить адрес Relay сервера на котором можно создать комнату
  rpc FindFreeRelay(FindFreeRelayRequest) returns(FindFreeRelayResponse);

  // Обновить статус Relay сервера в Registry
  rpc UpdateRelayStatus(RelayStatusUpdate) returns(UpdateRelayStatusResponse);

}

message FindFreeRelayRequest {}

message FindFreeRelayResponse {
  RelayAddrs addrs = 1;
}

message RelayStatusUpdate {
  RelayAddrs addrs = 1;
  RelayState state = 2;
}

message UpdateRelayStatusResponse {}

message Addr {
  string host = 1;
  uint32 port = 2;
}

message RelayAddrs {
  // Публичный UDP адрес для подключения клиентов
  Addr game = 1;
  // Внутренний GRPC адрес для взаимодействия с другими сервисами
  Addr grpc_internal = 2;
}

// Статус Relay сервера в Agones
// https://agones.dev/site/docs/reference/gameserver/#gameserver-state-diagram
enum RelayState {
  // Relay запущен, отправляет health-check в agones, но на сервере нет ни одной комнаты
  // Подходит для создание комнат, если нет других Allocated серверов
  Ready = 0;
  // На Relay сервере есть запущенные комнаты и он может принять еще
  // Нужно создавать новые комнаты в первую очередь на Allocated серверах
  Allocated = 1;
  // Адрес этого Relay не нужно возвращать из Registry: он выключается или полон
  NotReady = 2;
}